#!/bin/zsh
set -euo pipefail

# Simple tmux launcher for the *current* project folder.
# Creates a session named after the current directory with five tabs:
# 1) Shell, 2) Gemini, 3) Claude Code, 4) Cursor, 5) Codex.

PROJECT_DIR="${1:-$PWD}"
SESSION_NAME="$(basename "$PROJECT_DIR")"

# Sanitize session name (replace spaces and slashes)
SESSION_NAME="${SESSION_NAME// /-}"
SESSION_NAME="${SESSION_NAME//\//-}"

# Commands (adjust to taste)
GEMINI_CMD="gemini --yolo --checkpointing"
CLAUDE_CMD="claude"
CODEX_CMD="codex"
YAZI_CMD="yazi ${PROJECT_DIR}"
SHELL_CMD="${SHELL:-zsh}"

# If the session already exists, just jump to it
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
  if [ -n "${TMUX-}" ]; then
    exec tmux switch-client -t "$SESSION_NAME"
  else
    exec tmux attach-session -t "$SESSION_NAME"
  fi
fi

# Create a new session detached

# 0) Shell
tmux new-session -d -s "$SESSION_NAME" -n "\$" -c "$PROJECT_DIR"
tmux send-keys -t "${SESSION_NAME}:\$".0 "$SHELL_CMD" C-m

# 1) Codex
tmux new-window -t "$SESSION_NAME:" -n "CX" -c "$PROJECT_DIR"
tmux send-keys -t "${SESSION_NAME}:CX".0 "$CODEX_CMD" C-m

# 2) Yazi
tmux new-window -t "$SESSION_NAME:" -n "ðŸ“‚" -c "$PROJECT_DIR"
tmux send-keys -t "${SESSION_NAME}:ðŸ“‚".0 "$YAZI_CMD" C-m

# Focus Shell tab and attach (if already inside tmux, switch-client)
tmux select-window -t "${SESSION_NAME}:CX"

if [ -n "${TMUX-}" ]; then
  exec tmux switch-client -t "$SESSION_NAME"
else
  exec tmux attach-session -t "$SESSION_NAME"
fi
