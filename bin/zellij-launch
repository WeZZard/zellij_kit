#!/bin/bash

# zellij-launch - Zellij session management function
# Usage: zellij-launch [--layout regular|compact] [session_name]
# Options:
#   --layout regular|compact  Choose layout (default: from ZK_DEFAULT_LAYOUT env var or compact)
# Environment Variables:
#   ZK_DEFAULT_LAYOUT     Set default layout type (regular|compact, default: compact)
# Examples:
#   zellij-launch                       # Create/attach to 'master' session with default layout
#   zellij-launch --layout regular      # Create/attach to 'master' session with regular layout
#   ZK_DEFAULT_LAYOUT=regular zellij-launch  # Use regular as default layout
#   zellij-launch mysession             # Create/attach to 'mysession' with default layout
#   zellij-launch --layout regular mysession  # Create/attach to 'mysession' with regular layout

set -euo pipefail

# Default layout directory
ZJ_LAYOUT_DIR="${ZJ_LAYOUT_DIR:-$HOME/zellij_kit/layouts}"

# Function to determine the layout based on type
get_layout() {
    local layout_type="${1:-compact}"  # Default to compact
    local regular_layout="${ZJ_LAYOUT_DIR}/regular-layout.kdl"
    local compact_layout="${ZJ_LAYOUT_DIR}/compact-layout.kdl"
    
    case "${layout_type}" in
        "regular")
            if [[ -f "${regular_layout}" ]]; then
                echo "${regular_layout}"
            else
                echo ""
            fi
            ;;
        "compact")
            if [[ -f "${compact_layout}" ]]; then
                echo "${compact_layout}"
            else
                echo ""
            fi
            ;;
        *)
            echo ""
            ;;
    esac
}

# Early check for help option (before zellij check)
for arg in "$@"; do
    if [[ "$arg" == "--help" ]] || [[ "$arg" == "-h" ]]; then
        show_help() {
            echo "Usage: zellij-launch [--layout regular|compact] [session_name]"
            echo ""
            echo "Options:"
            echo "  --layout regular|compact  Choose layout (default: from ZK_DEFAULT_LAYOUT env var or compact)"
            echo "  --help                    Show this help message"
            echo ""
            echo "Environment Variables:"
            echo "  ZK_DEFAULT_LAYOUT     Set default layout type (regular|compact, default: compact)"
            echo ""
            echo "Examples:"
            echo "  zellij-launch                       # Create/attach to 'master' session with default layout"
            echo "  zellij-launch --layout regular      # Create/attach to 'master' session with regular layout"
            echo "  ZK_DEFAULT_LAYOUT=regular zellij-launch  # Use regular as default layout"
            echo "  zellij-launch mysession             # Create/attach to 'mysession' with default layout"
            echo "  zellij-launch --layout regular mysession  # Create/attach to 'mysession' with regular layout"
        }
        show_help
        exit 0
    fi
done

# Check if zellij is installed
if ! command -v zellij &> /dev/null; then
    echo "Error: zellij is not installed or not in PATH"
    exit 1
fi

# Function to create new session or attach to existing one
zj_session() {
    local session_name="$1"
    local layout_path="$2"
    
    # Resolve layout path - check if it's just a filename in our layouts directory
    if [[ -n "${layout_path}" ]] && [[ ! "${layout_path}" =~ ^/ ]] && [[ -f "${ZJ_LAYOUT_DIR}/${layout_path}" ]]; then
        layout_path="${ZJ_LAYOUT_DIR}/${layout_path}"
    fi
    
    if zellij list-sessions 2>/dev/null | grep "${session_name}"; then
        echo "Attaching to existing session: ${session_name}"
        zellij attach "${session_name}"
        return 0
    else
        echo "Creating new session: ${session_name}"
        if [[ -n "${layout_path}" ]] && [[ -f "${layout_path}" ]]; then
            zellij  --new-session-with-layout "${layout_path}" --session "${session_name}"
            return 0
        else
            echo "No layout file not found: ${layout_path}"
            return 1
        fi
    fi
}

# Function to show help
show_help() {
    echo "Usage: zellij-launch [--layout regular|compact] [session_name]"
    echo ""
    echo "Options:"
    echo "  --layout regular|compact  Choose layout (default: from ZK_DEFAULT_LAYOUT env var or compact)"
    echo "  --help                    Show this help message"
    echo ""
    echo "Environment Variables:"
    echo "  ZK_DEFAULT_LAYOUT     Set default layout type (regular|compact, default: compact)"
    echo ""
    echo "Examples:"
    echo "  zellij-launch                       # Create/attach to 'master' session with default layout"
    echo "  zellij-launch --layout regular      # Create/attach to 'master' session with regular layout"
    echo "  ZK_DEFAULT_LAYOUT=regular zellij-launch  # Use regular as default layout"
    echo "  zellij-launch mysession             # Create/attach to 'mysession' with default layout"
    echo "  zellij-launch --layout regular mysession  # Create/attach to 'mysession' with regular layout"
}

# Main function
main() {
    # Read default layout from environment variable, fallback to compact
    local layout_type="${ZK_DEFAULT_LAYOUT:-compact}"
    local session_name="master"  # Default session name
    
    # Parse command line arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
            --layout)
                if [[ -n "${2:-}" ]] && [[ "$2" =~ ^(regular|compact)$ ]]; then
                    layout_type="$2"
                    shift 2
                else
                    echo "Error: --layout requires 'regular' or 'compact' as argument"
                    show_help
                    exit 1
                fi
                ;;
            --help|-h)
                show_help
                exit 0
                ;;
            -*)
                echo "Error: Unknown option $1"
                show_help
                exit 1
                ;;
            *)
                # This should be the session name
                session_name="$1"
                shift
                ;;
        esac
    done
    
    # Get the layout path based on the selected type
    local layout_path
    layout_path=$(get_layout "${layout_type}")
    
    if [[ -z "${layout_path}" ]] || [[ ! -f "${layout_path}" ]]; then
        echo "Error: ${layout_type} layout not found in ${ZJ_LAYOUT_DIR}"
        echo "Expected file: ${layout_type}-layout.kdl"
        exit 1
    fi
    
    # Create or attach to session
    zj_session "${session_name}" "${layout_path}"
    return $?
}

main "$@"
exit $?
